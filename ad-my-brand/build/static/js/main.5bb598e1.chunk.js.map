{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","additem","num","Math","floor","random","value","state","items1","setState","items","concat","itemscopy","search","event","target","toLowerCase","filter","thing","includes","className","type","placeholder","onChange","e","onClick","this","title","map","item","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAsDeA,E,kDAlDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,QAAU,WACR,IAAIC,EAAMC,KAAKC,MAAM,EAAAD,KAAKE,SAAkB,GACxCC,EAAQ,EAAKC,MAAMC,OAAON,GAC9B,EAAKO,SAAS,CAACC,MAAM,EAAKH,MAAMG,MAAMC,OAAOL,KAC7C,EAAKG,SAAS,CAACG,UAAU,EAAKL,MAAMG,SAdnB,EAiBnBG,OAAS,SAACC,GACR,IAAIR,EAAQQ,EAAMC,OAAOT,MAAMU,cACrB,IAAPV,EAEH,EAAKG,SAAS,CAACC,MAAM,EAAKH,MAAMK,YAG9B,EAAKH,SAAS,CAACC,MAAM,EAAKH,MAAMG,MAAMO,QAAO,SAAAC,GAAK,OAAIA,EAAMF,cAAcG,SAASb,SArBrF,EAAKC,MAAQ,CACTG,MAAO,CAAC,OAAO,SAAS,UAAU,SAClCF,OAAO,CAAC,gBAAgB,QAAQ,UAAU,SAC1CI,UAAU,CAAC,OAAO,SAAS,UAAU,QAAQ,cAAc,SAAS,OAAO,YAN9D,E,0CA4BnB,WAAU,IAAD,OACP,OACA,sBAAKQ,UAAU,MAAf,UACE,sBAAMA,UAAU,SAAhB,sBAAwC,uBAAK,uBAC7C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,uBAAOC,KAAK,OAAOC,YAAY,gCAAgCC,SAAU,SAAAC,GAAM,EAAKX,OAAOW,IAAKJ,UAAU,eAC1G,sBAAMK,QAASC,KAAKzB,QAAS0B,MAAM,oBAAoBP,UAAU,OAAjE,eAAoF,uBAAK,uBAAK,0BAG9FM,KAAKnB,MAAMG,MAAMkB,KAAI,SAAAC,GAAI,OACzB,sBAAKT,UAAU,OAAf,UACA,6BAAKS,IAAU,uC,GA1CPC,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5bb598e1.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n        items: ['Milk','Coffee','Oranges','Bread'],\n        items1:['Chocolatecake','juice','popcorn','chips'],\n        itemscopy:['Milk','Coffee','Oranges','Bread','Cold Coffee','Nachos','Coke','Nuggets',]\n    }\n  }\n  \n  additem = () =>{\n    var num = Math.floor(Math.random() * (4-0) +0);\n    var value = this.state.items1[num];\n    this.setState({items:this.state.items.concat(value)});\n    this.setState({itemscopy:this.state.items})\n  };\n\n  search = (event) =>{\n    var value = event.target.value.toLowerCase();\n    if(value==''){\n    \n    this.setState({items:this.state.itemscopy})\n    }\n    else{\n      this.setState({items:this.state.items.filter(thing => thing.toLowerCase().includes(value))})\n    }\n  };\n\n  render() {\n    return (\n    <div className=\"App\">\n      <span className=\"header\">ItemList</span><br/><br/>\n      <div className=\"itemslist\">\n        <div className=\"divbox\">\n          <input type=\"text\" placeholder=\"Enter the item to be searched\" onChange={e => {this.search(e)}} className=\"inputfield\"/>\n          <span onClick={this.additem} title=\"click to add item\" className=\"plus\">&#43;</span><br/><br/><br/>\n        </div>\n        {\n          this.state.items.map(item =>( \n          <div className=\"list\">\n          <h3>{item}</h3><hr/>\n          </div>\n          ))\n        }\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}